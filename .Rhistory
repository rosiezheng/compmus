ylab("Liveness Level")
ggplotly(liveness)
# Plot
valence <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=valence, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Valence") +
xlab("Playlist") +
ylab("Valence Level")
ggplotly(valence)
remotes::install_github('jaburgoyne/compmus')
knitr::opts_chunk$set(echo = FALSE)
bzt <-
get_tidy_audio_analysis("5ZLkc5RY1NM4FtGWEd6HOE") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(spotifyr)
library(compmus)
bzt <-
get_tidy_audio_analysis("5ZLkc5RY1NM4FtGWEd6HOE") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
)
bzt %>%
compmus_gather_timbre() %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = basis,
fill = value
)
) +
geom_tile() +
labs(x = "Time (s)", y = NULL, fill = "Magnitude") +
scale_fill_viridis_c() +
theme_classic()
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
)
bzt %>%
compmus_gather_timbre() %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = basis,
fill = value
)
) +
geom_tile() +
labs(x = "Time (s)", y = NULL, fill = "Magnitude") +
scale_fill_viridis_c() +
theme_classic()
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt %>%
compmus_self_similarity(timbre, "angular") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
)
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt %>%
compmus_self_similarity(timbre, "angular") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(sections, segments) %>%                     # Change `bars`
select(sections) %>%                                      #   in all three
unnest(sections) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
)
bzt %>%
compmus_self_similarity(timbre, "angular") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(beats, segments) %>%                     # Change `bars`
select(beats) %>%                                      #   in all three
unnest(beats) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
)
bzt %>%
compmus_self_similarity(timbre, "angular") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
)
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
knitr::opts_chunk$set(echo = FALSE)
library(spotifyr)
library(tidyverse)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggplot2)
library(flexdashboard)
library(plotly)
library(compmus)
rocky <-
get_tidy_audio_analysis("5uDohC8URXwbGiHAMuKGoa") %>%
compmus_align(bars, segments) %>%
select(bars) %>%
unnest(bars) %>%
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "acentre", norm = "manhattan"
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "mean"
)
)
bind_rows(
rocky %>%
compmus_self_similarity(pitches, "aitchison") %>%
mutate(d = d / max(d), type = "Chroma"),
rocky %>%
compmus_self_similarity(timbre, "euclidean") %>%
mutate(d = d / max(d), type = "Timbre")
) %>%
mutate() %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
facet_wrap(~type) +
scale_fill_viridis_c(option = "E", guide = "none") +
theme_classic() +
labs(x = "", y = "")
stargazing <-
get_tidy_audio_analysis("0VF7YLIxSQKyNiFL3X6MmN") %>%
select(segments) %>%
unnest(segments) %>%
select(start, duration, pitches)
heatwaves <-
get_tidy_audio_analysis("3USxtqRwSYz57Ewm6wWRMp") %>%
select(segments) %>%
unnest(segments) %>%
select(start, duration, pitches)
bord_dist <-
compmus_long_distance(
tallis %>% mutate(pitches = map(pitches, compmus_normalise, "manhattan")),
chapelle %>% mutate(pitches = map(pitches, compmus_normalise, "manhattan")),
feature = pitches,
method = "aitchison"
)
pop_bord <-
bord_dist %>%
mutate(
stargazing = xstart + xduration / 2,
heatwaves = ystart + yduration / 2
) %>%
ggplot(
aes(
x = stargazing,
y = heatwaves,
fill = d
)
) +
geom_tile(aes(width = xduration, height = yduration)) +
coord_fixed() +
scale_x_continuous(
breaks = c(0, 60, 105, 150, 185, 220, 280, 327),
labels =
c(
"",
"",
"",
"",
"",
"",
"",
""
),
) +
scale_y_continuous(
breaks = c(0, 45, 80, 120, 145, 185, 240, 287),
labels =
c(
"",
"",
"",
"",
"",
"",
"",
""
),
) +
scale_fill_viridis_c(option = "E", guide = "none") +
theme_classic() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(x = "Stargazing - Still Woozy", y = "Heat Waves - Glass Animals")
pop_bord
pop_bord <-
bord_dist %>%
mutate(
stargazing = xstart + xduration / 2,
heatwaves = ystart + yduration / 2
) %>%
ggplot(
aes(
x = stargazing,
y = heatwaves,
fill = d
)
) +
geom_tile(aes(width = xduration, height = yduration)) +
coord_fixed() +
scale_x_continuous(
breaks = c(0, 60, 105, 150, 185, 220, 280, 327),
labels =
c(
"",
"",
"",
"",
"",
"",
"",
""
),
) +
scale_y_continuous(
breaks = c(0, 45, 80, 120, 145, 185, 240, 287),
labels =
c(
"",
"",
"",
"",
"",
"",
"",
""
),
) +
scale_fill_viridis_c(option = "E", guide = "none") +
theme_classic() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(x = "Stargazing - Still Woozy", y = "Heat Waves - Glass Animals")
pop_bord
