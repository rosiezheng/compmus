vjust = "bottom",
nudge_x = -0.05,
nudge_y = 0.02
) +
facet_wrap(~category) +
scale_x_continuous(
limits = c(0, 1),
breaks = c(0, 0.25, 0.5,0.75, 1),
minor_breaks = NULL
) +
scale_y_continuous(
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
minor_breaks = NULL
) +
scale_colour_brewer(
type = "qual",
palette = "Pastel2"
) +
scale_size_continuous(
trans = "exp",
guide = "none"
) +
theme_light() +
labs(
x = "Valence",
y = "Energy",
colour = "Mode"
)
ggplotly(happiness)
# Sample size
sample_size_portfolio = playlists_portfolio %>% group_by(playlist_name) %>% summarize(num=n())
# Plot
tempo <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=tempo, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Tempo") +
xlab("Playlist") +
ylab("BPM")
ggplotly(tempo)
# Plot
energy <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=energy, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Energy") +
xlab("Playlist") +
ylab("Energy Level")
ggplotly(energy)
# Plot
loudness <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=loudness, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Loudness") +
xlab("Playlist") +
ylab("dB")
ggplotly(loudness)
# Plot
danceability <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=danceability, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Danceability") +
xlab("Playlist") +
ylab("Danceability Level")
ggplotly(danceability)
# Plot
speechiness <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=speechiness, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Speechiness") +
xlab("Playlist") +
ylab("Speechiness Level")
ggplotly(speechiness)
# Plot
acousticness <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=acousticness, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Acousticness") +
xlab("Playlist") +
ylab("Acousticness Level")
ggplotly(acousticness)
# Plot
instrumentalness <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=instrumentalness, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Instrumentalness") +
xlab("Playlist") +
ylab("Instrunemntalness Level")
ggplotly(instrumentalness)
# Plot
liveness <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=liveness, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Liveness") +
xlab("Playlist") +
ylab("Liveness Level")
ggplotly(liveness)
# Plot
valence <- playlists_portfolio %>%
left_join(sample_size_portfolio) %>%
mutate(myaxis = paste0(playlist_name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=valence, fill=playlist_name)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="grey", alpha=0.8) +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=15)
) +
ggtitle("Valence") +
xlab("Playlist") +
ylab("Valence Level")
ggplotly(valence)
remotes::install_github('jaburgoyne/compmus')
knitr::opts_chunk$set(echo = FALSE)
bzt <-
get_tidy_audio_analysis("5ZLkc5RY1NM4FtGWEd6HOE") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(spotifyr)
library(compmus)
bzt <-
get_tidy_audio_analysis("5ZLkc5RY1NM4FtGWEd6HOE") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
)
bzt %>%
compmus_gather_timbre() %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = basis,
fill = value
)
) +
geom_tile() +
labs(x = "Time (s)", y = NULL, fill = "Magnitude") +
scale_fill_viridis_c() +
theme_classic()
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
)
bzt %>%
compmus_gather_timbre() %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = basis,
fill = value
)
) +
geom_tile() +
labs(x = "Time (s)", y = NULL, fill = "Magnitude") +
scale_fill_viridis_c() +
theme_classic()
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt %>%
compmus_self_similarity(timbre, "angular") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
)
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt %>%
compmus_self_similarity(timbre, "angular") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(sections, segments) %>%                     # Change `bars`
select(sections) %>%                                      #   in all three
unnest(sections) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
)
bzt %>%
compmus_self_similarity(timbre, "angular") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(beats, segments) %>%                     # Change `bars`
select(beats) %>%                                      #   in all three
unnest(beats) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
)
bzt %>%
compmus_self_similarity(timbre, "angular") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
bzt <-
get_tidy_audio_analysis("0JK5Dq2DioG900WJ7PvDni") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "manhattan"              # Change summary & norm.
)
)
bzt %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
