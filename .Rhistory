valence = c(0.090, 0.123),
energy = c(0.101, 0.967)
),
colour = "black",         # Override colour (not mode here).
size = 3,                 # Override size (not loudness here).
hjust = "left",           # Align left side of label with the point.
vjust = "bottom",         # Align bottom of label with the point.
nudge_x = -0.05,          # Nudge the label slightly left.
nudge_y = 0.02            # Nudge the label slightly up.
) +
facet_wrap(~category) +     # Separate charts per playlist.
scale_x_continuous(         # Fine-tune the x axis.
limits = c(0, 1),
breaks = c(0, 0.50, 1),   # Use grid-lines for quadrants only.
minor_breaks = NULL       # Remove 'minor' grid-lines.
) +
scale_y_continuous(         # Fine-tune the y axis in the same way.
limits = c(0, 1),
breaks = c(0, 0.50, 1),
minor_breaks = NULL
) +
scale_colour_brewer(        # Use the Color Brewer to choose a palette.
type = "qual",            # Qualitative set.
palette = "Paired"        # Name of the palette is 'Paired'.
) +
scale_size_continuous(      # Fine-tune the sizes of each point.
trans = "exp",            # Use an exp transformation to emphasise loud.
guide = "none"            # Remove the legend for size.
) +
theme_light() +             # Use a simpler theme.
labs(                       # Make the titles nice.
x = "Valence",
y = "Energy",
colour = "Mode"
)
```{r}
playlists %>%                    # Start with awards.
mutate(
mode = ifelse(key == 0, "Key 0",
ifelse(key == 1, "Key 1",
ifelse(key == 2, "Key 2",
ifelse(key == 3, "Key 3",
ifelse(key == 4, "Key 4",
ifelse(key == 5, "Key 5",
ifelse(key == 6, "Key 6",
ifelse(key == 7, "Key 7", ifelse(key == 8, "Key 8", ifelse(key == 9, "Key 9", ifelse(key == 10, "Key 10", ifelse(key == 11, "Key 11"))))))))))))
) %>%
ggplot(                     # Set up the plot.
aes(
x = valence,
y = energy,
size = loudness,
colour = key
)
) +
geom_point() +              # Scatter plot.
geom_rug(size = 0.1) +      # Add 'fringes' to show data distribution.
geom_text(                  # Add text labels from above.
aes(
x = valence,
y = energy,
label = label
),
data =
tibble(
label = c("Altijd wel iemand", "ENERGY"),
category = c("Nineties", "Zeros"),
valence = c(0.090, 0.123),
energy = c(0.101, 0.967)
),
colour = "black",         # Override colour (not mode here).
size = 3,                 # Override size (not loudness here).
hjust = "left",           # Align left side of label with the point.
vjust = "bottom",         # Align bottom of label with the point.
nudge_x = -0.05,          # Nudge the label slightly left.
nudge_y = 0.02            # Nudge the label slightly up.
) +
facet_wrap(~category) +     # Separate charts per playlist.
scale_x_continuous(         # Fine-tune the x axis.
limits = c(0, 1),
breaks = c(0, 0.50, 1),   # Use grid-lines for quadrants only.
minor_breaks = NULL       # Remove 'minor' grid-lines.
) +
scale_y_continuous(         # Fine-tune the y axis in the same way.
limits = c(0, 1),
breaks = c(0, 0.50, 1),
minor_breaks = NULL
) +
scale_colour_brewer(        # Use the Color Brewer to choose a palette.
type = "qual",            # Qualitative set.
palette = "Paired"        # Name of the palette is 'Paired'.
) +
scale_size_continuous(      # Fine-tune the sizes of each point.
trans = "exp",            # Use an exp transformation to emphasise loud.
guide = "none"            # Remove the legend for size.
) +
theme_light() +             # Use a simpler theme.
labs(                       # Make the titles nice.
x = "Valence",
y = "Energy",
colour = "Mode"
)
playlists %>%                    # Start with awards.
mutate(
key = ifelse(key == 0, "Key 0",
ifelse(key == 1, "Key 1",
ifelse(key == 2, "Key 2",
ifelse(key == 3, "Key 3",
ifelse(key == 4, "Key 4",
ifelse(key == 5, "Key 5",
ifelse(key == 6, "Key 6",
ifelse(key == 7, "Key 7", ifelse(key == 8, "Key 8", ifelse(key == 9, "Key 9", ifelse(key == 10, "Key 10", ifelse(key == 11, "Key 11"))))))))))))
) %>%
ggplot(                     # Set up the plot.
aes(
x = valence,
y = energy,
size = loudness,
colour = key
)
) +
geom_point() +              # Scatter plot.
geom_rug(size = 0.1) +      # Add 'fringes' to show data distribution.
geom_text(                  # Add text labels from above.
aes(
x = valence,
y = energy,
label = label
),
data =
tibble(
label = c("Altijd wel iemand", "ENERGY"),
category = c("Nineties", "Zeros"),
valence = c(0.090, 0.123),
energy = c(0.101, 0.967)
),
colour = "black",         # Override colour (not mode here).
size = 3,                 # Override size (not loudness here).
hjust = "left",           # Align left side of label with the point.
vjust = "bottom",         # Align bottom of label with the point.
nudge_x = -0.05,          # Nudge the label slightly left.
nudge_y = 0.02            # Nudge the label slightly up.
) +
facet_wrap(~category) +     # Separate charts per playlist.
scale_x_continuous(         # Fine-tune the x axis.
limits = c(0, 1),
breaks = c(0, 0.50, 1),   # Use grid-lines for quadrants only.
minor_breaks = NULL       # Remove 'minor' grid-lines.
) +
scale_y_continuous(         # Fine-tune the y axis in the same way.
limits = c(0, 1),
breaks = c(0, 0.50, 1),
minor_breaks = NULL
) +
scale_colour_brewer(        # Use the Color Brewer to choose a palette.
type = "qual",            # Qualitative set.
palette = "Paired"        # Name of the palette is 'Paired'.
) +
scale_size_continuous(      # Fine-tune the sizes of each point.
trans = "exp",            # Use an exp transformation to emphasise loud.
guide = "none"            # Remove the legend for size.
) +
theme_light() +             # Use a simpler theme.
labs(                       # Make the titles nice.
x = "Valence",
y = "Energy",
colour = "Key"
)
playlists %>%                    # Start with awards.
mutate(
key = ifelse(key == 0, "Key 0",
ifelse(key == 1, "Key 1",
ifelse(key == 2, "Key 2",
ifelse(key == 3, "Key 3",
ifelse(key == 4, "Key 4",
ifelse(key == 5, "Key 5",
ifelse(key == 6, "Key 6",
ifelse(key == 7, "Key 7", ifelse(key == 8, "Key 8", ifelse(key == 9, "Key 9", ifelse(key == 10, "Key 10", ifelse(key == 11, "Key 11"))))))))))))
) %>%
ggplot(                     # Set up the plot.
aes(
x = valence,
y = energy,
size = loudness,
colour = key
)
) +
geom_point() +              # Scatter plot.
geom_rug(size = 0.1) +      # Add 'fringes' to show data distribution.
geom_text(                  # Add text labels from above.
aes(
x = valence,
y = energy,
label = label
),
data =
tibble(
label = c("", ""),
category = c("Nineties", "Zeros"),
valence = c(0.090, 0.123),
energy = c(0.101, 0.967)
),
colour = "black",         # Override colour (not mode here).
size = 3,                 # Override size (not loudness here).
hjust = "left",           # Align left side of label with the point.
vjust = "bottom",         # Align bottom of label with the point.
nudge_x = -0.05,          # Nudge the label slightly left.
nudge_y = 0.02            # Nudge the label slightly up.
) +
facet_wrap(~category) +     # Separate charts per playlist.
scale_x_continuous(         # Fine-tune the x axis.
limits = c(0, 1),
breaks = c(0, 0.50, 1),   # Use grid-lines for quadrants only.
minor_breaks = NULL       # Remove 'minor' grid-lines.
) +
scale_y_continuous(         # Fine-tune the y axis in the same way.
limits = c(0, 1),
breaks = c(0, 0.50, 1),
minor_breaks = NULL
) +
scale_colour_brewer(        # Use the Color Brewer to choose a palette.
type = "qual",            # Qualitative set.
palette = "Paired"        # Name of the palette is 'Paired'.
) +
scale_size_continuous(      # Fine-tune the sizes of each point.
trans = "exp",            # Use an exp transformation to emphasise loud.
guide = "none"            # Remove the legend for size.
) +
theme_light() +             # Use a simpler theme.
labs(                       # Make the titles nice.
x = "Valence",
y = "Energy",
colour = "Key"
)
playlists %>%                    # Start with awards.
mutate(
key = ifelse(key == 0, "Key 0",
ifelse(key == 1, "Key 1",
ifelse(key == 2, "Key 2",
ifelse(key == 3, "Key 3",
ifelse(key == 4, "Key 4",
ifelse(key == 5, "Key 5",
ifelse(key == 6, "Key 6",
ifelse(key == 7, "Key 7", ifelse(key == 8, "Key 8", ifelse(key == 9, "Key 9", ifelse(key == 10, "Key 10", ifelse(key == 11, "Key 11")))))))))))))
playlists %>%                    # Start with awards.
mutate(
key = ifelse(key == 0, "Key 0",
ifelse(key == 1, "Key 1",
ifelse(key == 2, "Key 2",
ifelse(key == 3, "Key 3",
ifelse(key == 4, "Key 4",
ifelse(key == 5, "Key 5",
ifelse(key == 6, "Key 6",
ifelse(key == 7, "Key 7", ifelse(key == 8, "Key 8", ifelse(key == 9, "Key 9", ifelse(key == 10, "Key 10", ifelse(key == 11, "Key 11"))))))))))))
) %>%
ggplot(                     # Set up the plot.
aes(
x = valence,
y = energy,
size = loudness,
colour = key
)
) +
geom_point() +              # Scatter plot.
geom_rug(size = 0.1) +      # Add 'fringes' to show data distribution.
geom_text(                  # Add text labels from above.
aes(
x = valence,
y = energy,
label = label
),
data =
tibble(
label = c("", ""),
category = c("Nineties", "Zeros"),
valence = c(0.090, 0.123),
energy = c(0.101, 0.967)
),
colour = "black",         # Override colour (not mode here).
size = 3,                 # Override size (not loudness here).
hjust = "left",           # Align left side of label with the point.
vjust = "bottom",         # Align bottom of label with the point.
nudge_x = -0.05,          # Nudge the label slightly left.
nudge_y = 0.02            # Nudge the label slightly up.
) +
facet_wrap(~category) +     # Separate charts per playlist.
scale_x_continuous(         # Fine-tune the x axis.
limits = c(0, 1),
breaks = c(0, 0.50, 1),   # Use grid-lines for quadrants only.
minor_breaks = NULL       # Remove 'minor' grid-lines.
) +
scale_y_continuous(         # Fine-tune the y axis in the same way.
limits = c(0, 1),
breaks = c(0, 0.50, 1),
minor_breaks = NULL
) +
scale_colour_brewer(        # Use the Color Brewer to choose a palette.
type = "qual",            # Qualitative set.
palette = "Paired"        # Name of the palette is 'Paired'.
) +
scale_size_continuous(      # Fine-tune the sizes of each point.
trans = "exp",            # Use an exp transformation to emphasise loud.
guide = "none"            # Remove the legend for size.
) +
theme_light() +             # Use a simpler theme.
labs(                       # Make the titles nice.
x = "Valence",
y = "Energy",
colour = "Key"
)
playlists %>%                    # Start with awards.
mutate(
mode = ifelse(mode == 0, "Minor")
) %>%
ggplot(                     # Set up the plot.
aes(
x = valence,
y = energy,
size = loudness,
colour = mode
)
) +
geom_point() +              # Scatter plot.
geom_rug(size = 0.1) +      # Add 'fringes' to show data distribution.
geom_text(                  # Add text labels from above.
aes(
x = valence,
y = energy,
label = label
),
data =
tibble(
label = c("", ""),
category = c("Nineties", "Zeros"),
valence = c(0.090, 0.123),
energy = c(0.101, 0.967)
),
colour = "black",         # Override colour (not mode here).
size = 3,                 # Override size (not loudness here).
hjust = "left",           # Align left side of label with the point.
vjust = "bottom",         # Align bottom of label with the point.
nudge_x = -0.05,          # Nudge the label slightly left.
nudge_y = 0.02            # Nudge the label slightly up.
) +
facet_wrap(~category) +     # Separate charts per playlist.
scale_x_continuous(         # Fine-tune the x axis.
limits = c(0, 1),
breaks = c(0, 0.50, 1),   # Use grid-lines for quadrants only.
minor_breaks = NULL       # Remove 'minor' grid-lines.
) +
scale_y_continuous(         # Fine-tune the y axis in the same way.
limits = c(0, 1),
breaks = c(0, 0.50, 1),
minor_breaks = NULL
) +
scale_colour_brewer(        # Use the Color Brewer to choose a palette.
type = "qual",            # Qualitative set.
palette = "Paired"        # Name of the palette is 'Paired'.
) +
scale_size_continuous(      # Fine-tune the sizes of each point.
trans = "exp",            # Use an exp transformation to emphasise loud.
guide = "none"            # Remove the legend for size.
) +
theme_light() +             # Use a simpler theme.
labs(                       # Make the titles nice.
x = "Valence",
y = "Energy",
colour = "Mode"
)
playlists %>%                    # Start with awards.
mutate(
mode = ifelse(mode == 0, "Minor", "Major")
) %>%
ggplot(                     # Set up the plot.
aes(
x = valence,
y = energy,
size = loudness,
colour = mode
)
) +
geom_point() +              # Scatter plot.
geom_rug(size = 0.1) +      # Add 'fringes' to show data distribution.
geom_text(                  # Add text labels from above.
aes(
x = valence,
y = energy,
label = label
),
data =
tibble(
label = c("", ""),
category = c("Nineties", "Zeros"),
valence = c(0.090, 0.123),
energy = c(0.101, 0.967)
),
colour = "black",         # Override colour (not mode here).
size = 3,                 # Override size (not loudness here).
hjust = "left",           # Align left side of label with the point.
vjust = "bottom",         # Align bottom of label with the point.
nudge_x = -0.05,          # Nudge the label slightly left.
nudge_y = 0.02            # Nudge the label slightly up.
) +
facet_wrap(~category) +     # Separate charts per playlist.
scale_x_continuous(         # Fine-tune the x axis.
limits = c(0, 1),
breaks = c(0, 0.50, 1),   # Use grid-lines for quadrants only.
minor_breaks = NULL       # Remove 'minor' grid-lines.
) +
scale_y_continuous(         # Fine-tune the y axis in the same way.
limits = c(0, 1),
breaks = c(0, 0.50, 1),
minor_breaks = NULL
) +
scale_colour_brewer(        # Use the Color Brewer to choose a palette.
type = "qual",            # Qualitative set.
palette = "Paired"        # Name of the palette is 'Paired'.
) +
scale_size_continuous(      # Fine-tune the sizes of each point.
trans = "exp",            # Use an exp transformation to emphasise loud.
guide = "none"            # Remove the legend for size.
) +
theme_light() +             # Use a simpler theme.
labs(                       # Make the titles nice.
x = "Valence",
y = "Energy",
colour = "Mode"
)
playlists %>%                    # Start with awards.
mutate(
key = ifelse(key == 0, "Key 0", "Key1",
ifelse(key == 1, "Key 1","Key1",
ifelse(key == 2, "Key 2","Key1",
ifelse(key == 3, "Key 3","Key1",
ifelse(key == 4, "Key 4","Key1",
ifelse(key == 5, "Key 5","Key1",
ifelse(key == 6, "Key 6","Key1",
ifelse(key == 7, "Key 7", "Key1", ifelse(key == 8, "Key 8","Key1", ifelse(key == 9, "Key 9","Key1", ifelse(key == 10, "Key 10", "Key1", ifelse(key == 11, "Key 11","Key1"))))))))))))
) %>%
ggplot(                     # Set up the plot.
aes(
x = valence,
y = energy,
size = loudness,
colour = key
)
) +
geom_point() +              # Scatter plot.
geom_rug(size = 0.1) +      # Add 'fringes' to show data distribution.
geom_text(                  # Add text labels from above.
aes(
x = valence,
y = energy,
label = label
),
data =
tibble(
label = c("", ""),
category = c("Nineties", "Zeros"),
valence = c(0.090, 0.123),
energy = c(0.101, 0.967)
),
colour = "black",         # Override colour (not mode here).
size = 3,                 # Override size (not loudness here).
hjust = "left",           # Align left side of label with the point.
vjust = "bottom",         # Align bottom of label with the point.
nudge_x = -0.05,          # Nudge the label slightly left.
nudge_y = 0.02            # Nudge the label slightly up.
) +
facet_wrap(~category) +     # Separate charts per playlist.
scale_x_continuous(         # Fine-tune the x axis.
limits = c(0, 1),
breaks = c(0, 0.50, 1),   # Use grid-lines for quadrants only.
minor_breaks = NULL       # Remove 'minor' grid-lines.
) +
scale_y_continuous(         # Fine-tune the y axis in the same way.
limits = c(0, 1),
breaks = c(0, 0.50, 1),
minor_breaks = NULL
) +
scale_colour_brewer(        # Use the Color Brewer to choose a palette.
type = "qual",            # Qualitative set.
palette = "Paired"        # Name of the palette is 'Paired'.
) +
scale_size_continuous(      # Fine-tune the sizes of each point.
trans = "exp",            # Use an exp transformation to emphasise loud.
guide = "none"            # Remove the legend for size.
) +
theme_light() +             # Use a simpler theme.
labs(                       # Make the titles nice.
x = "Valence",
y = "Energy",
colour = "Key"
)
knitr::opts_chunk$set(echo = TRUE)
rmarkdown::render()
rmarkdown::render("index.Rmd")
knitr::opts_chunk$set(echo = TRUE)
library(spotifyr)
library(tidyverse)
borderless <- get_playlist_audio_features("", "37i9dQZF1DWZJmo7mlltU6")
borderless
pop <- get_playlist_audio_features("", "37i9dQZF1DXcBWIGoYBM5M")
pop
hiphop <- get_playlist_audio_features("", "37i9dQZF1DX0XUsuxWHRQd")
hiphop
dance <- get_playlist_audio_features("", "37i9dQZF1DXaXB8fQg7xif")
dance
rock <- get_playlist_audio_features("", "37i9dQZF1DWXRqgorJj26U")
rock
indie <- get_playlist_audio_features("", "37i9dQZF1DX2Nc3B70tvx0")
indie
